# -*- coding: utf-8 -*-
"""
Created on Fri Dec 14 22:09:32 2018

@author: rthie
"""

import csv
import numpy as np
import matplotlib as plt
import pylab as pl

def open_numeric(baseFileName, fieldnames=['user','movie','rating','datestamp'], delimiter='\t'):
    """
    fonction généralisée pour lire les fichiers numériques
    """
    with open(baseFileName, 'r') as f:
         reader = csv.DictReader(f, delimiter = delimiter, fieldnames=fieldnames)
         # create a dict out of reader, converting all values to integers
         return [dict([key, int(value)] for key, value in row.items()) for row in list(reader)]


def open_file(baseFileName, fieldnames=None , delimiter='|'):    
    """
    fonction généralisée pour lire les fichiers non numériques
    """   
    with open(baseFileName, 'r') as f:
         reader = csv.DictReader(f, delimiter = delimiter,fieldnames=fieldnames)
         return list(reader)

#
with open('u.info', 'r') as f:
    reader = csv.reader(f, delimiter = '\n')
    Info = list(reader)
print(Info)


#Création des deux directionnaires des ratings (20% et 80%)¶

baseUserItem=open_numeric("u1.base")
print(baseUserItem[:10])
print("Nombre de ratings :", len(baseUserItem))

testUserItem=open_numeric("u1.test")
print(testUserItem[:10])
print("Nombre de ratings :", len(testUserItem))


#Informations sur les User / Occupation /Items (movies) / Genres¶

User=open_file("u.user", fieldnames=['userID','age','gender','occupation','zipcode'])
print(User[:10])
print("Nb de users :", len(User))

with open('u.occupation', 'r') as f: #je n'ai pas réussi a utiliser ma fonction généralisée, la doc de csv.reader n'est pas à jour
    reader = csv.reader(f)
    Occupation = list(reader)
print(Occupation)
print("Nombre d'occupations :", len(Occupation))
  
Item=open_file("u.item", fieldnames=['movieID', 'Title', 'releaseDate', 'videoReleaseDate','IMDb URL',
            'unknown','Action', 'Adventure', 'Animation', 'Childrens', 'Comedy', 'Crime', 'Documentary','Drama', 'Fantasy',
            'Film-Noir', 'Horror', 'Musical', 'Mystery', 'Romance', 'Sci-Fi', 'Thriller', 'War', 'Western'])
print(Item[:2])
print("Nombre de films :", len(Item))    

Genre=open_file("u.genre",fieldnames=['Genre:','Numero:'])
print(Genre)
print("Nombre de genres :", len(Genre))


#construction matrice

# Remplir la matrice utilisateur-item 
NbUsers = len(User)
NbItems= len(Item)
R = np.zeros((NbUsers, NbItems))
for row in baseUserItem:
    R[row['user']-1,row['movie']-1] = row['rating']
pl.imshow(R,interpolation='none')

 #remplissage note moyenne film
 
mean_items=[0 for row in range(NbItems)] #liste des moyenne par colonne(film)
for col in range(NbItems):
   rating_number=0 #savoir le nombre d'éléments quon additionne pour diviser la moyenne 
   for user_rating in R[:,col]:
       if user_rating!=0: # on ne prend que les valeurs non nul
           mean_items[col]+=user_rating
           rating_number+=1
   if rating_number!=0: #il doit y avoir au moins une note par film
       mean_items[col]=mean_items[col]/rating_number        
 
  
RC=R.copy() #matrice remplie par note moyenne film

for col in range(NbItems):
    for row in range(NbUsers):
        if RC[row, col]==0:
            RC[row, col]=mean_items[col]
            
pl.imshow(RC,interpolation='none')
        

 #remplissage note moyenne user
 
mean_users=[0 for row in range(NbUsers)] #liste des moyenne par lignes(users)
for row in range(NbUsers):
   rating_number=0 #savoir le nombre d'éléments quon additionne pour diviser la moyenne
   for user_rating in R[row,:]:
       if user_rating!=0:
           mean_users[row]+=user_rating
           rating_number+=1
   if rating_number!=0:    #il doit y avoir au moins une note par film   
       mean_users[row]=mean_users[row]/rating_number       
 
  
RR=R.copy() #matrice remplie par note moyenne user

for row in range(NbUsers):
    for col in range(NbItems):
        if RR[row, col]==0:
            RR[row, col]=mean_users[row]

pl.imshow(RR,interpolation='none') 



       
